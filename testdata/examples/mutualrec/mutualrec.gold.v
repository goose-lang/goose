(* autogenerated from github.com/goose-lang/goose/testdata/examples/mutualrec *)
From New.golang Require Import defn.

Definition mutualrec : go_string := "github.com/goose-lang/goose/testdata/examples/mutualrec".

Module mutualrec.
Section code.
Context `{ffi_syntax}.


(* go: mutualrec.go:3:6 *)
Definition A : val :=
  rec: "A" <> :=
    exception_do (do:  ((func_call #mutualrec.mutualrec #"B"%go) #())).

(* go: mutualrec.go:7:6 *)
Definition B : val :=
  rec: "B" <> :=
    exception_do (do:  ((func_call #mutualrec.mutualrec #"A"%go) #())).

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [("A"%go, A); ("B"%go, B)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo mutualrec.mutualrec :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init mutualrec.mutualrec (Î»: <>,
      exception_do (do:  #())
      ).

End code.
End mutualrec.
