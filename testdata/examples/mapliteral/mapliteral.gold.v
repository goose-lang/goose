(* autogenerated from github.com/goose-lang/goose/testdata/examples/mapliteral *)
From New.golang Require Import defn.

Definition example : go_string := "github.com/goose-lang/goose/testdata/examples/mapliteral".

Module example.
Section code.
Context `{ffi_syntax}.


(* go: mapliteral.go:3:6 *)
Definition mapliteral : val :=
  rec: "mapliteral" <> :=
    exception_do (return: ((let: "$v0" := #(W64 2) in
     let: "$k0" := #(W64 1) in
     map.literal #uint64T #uint64T [("$k0", "$v0")]))).

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [("mapliteral"%go, mapliteral)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo mapliteral.example :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init mapliteral.example (Î»: <>,
      exception_do (do:  #())
      ).

End code.
End example.
