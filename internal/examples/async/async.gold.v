(* autogenerated from github.com/tchajed/goose/internal/examples/async *)
From New.golang Require Import defn.
From New.code Require github_com.tchajed.goose.machine.async_disk.

From New Require Import async_disk_prelude.

(* async just uses the async disk FFI *)

Definition TakesDisk : val :=
  rec: "TakesDisk" "d" :=
    exception_do (let: "d" := ref_ty disk.Disk "d" in
    do:  #()).

Definition UseDisk : val :=
  rec: "UseDisk" "d" :=
    exception_do (let: "d" := ref_ty disk.Disk "d" in
    let: "v" := ref_ty (sliceT byteT) (zero_val (sliceT byteT)) in
    let: "$a0" := slice.make2 byteT #4096 in
    do:  "v" <-[sliceT byteT] "$a0";;;
    do:  (__Write (![disk.Disk] "d")) #0 (![sliceT byteT] "v");;;
    do:  (__Barrier (![disk.Disk] "d")) #();;;
    do:  #()).
